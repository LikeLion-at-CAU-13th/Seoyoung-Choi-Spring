spring:
  datasource:
    url: jdbc:h2:tcp://localhost/~/test-likelion # 메모리 내 데이터베이스 URL, 동시접속을 위해 TCP 모드로 접속
    driver-class-name: org.h2.Driver # H2 드라이버 클래스
    username: sa # 기본 사용자 이름
    password: # 기본 비밀번호
  h2:
    console:
      enabled: true # H2 콘솔을 활성화합니다.
      path: /h2-console # H2 콘솔의 접근 경로
  jpa:
    hibernate:
      ddl-auto: update # 일단 우리는 스키마 생성해야하니까~
    properties:
      hibernate:
        format_sql: true # 얘는 실제 디비로 나가는 sql을 보여줍니다
  #hibernate:
    #ddl-auto: create # Hibernate의 DDL 자동 생성 전략 (update, create, create-drop 등)
  sql:
    init:
      mode: always # 애플리케이션 시작 시 스크립트 초기화 (기본값: embedded)

  config:
    import : optional:application-secret.yml
  security:
    oauth2:
      client:
        registration:
          google:
            client-id : GOOGLE_CLIENT_ID
            client-secret : GOOGLE_CLIENT_SECRET
            scope:
              - email
              - profile
            redirect-uri: "http://localhost:8080/login/oauth2/code/google"